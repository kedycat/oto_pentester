from colorama import Fore, Back, Style
import time
import os
#------------Diğer Fonksiyonlar---------------
def bosluk_silme(yazılım, komut):
    i = 0
    while True:
        if komut[i] == " ":
            regular = komut[i:].replace(" ", "_")
            os.system(komut + ">> report/" + yazılım.upper() + regular + ".txt")
            print(">>>>>Tarama sonucunuz report/ klasörüne "+yazılım.upper()+regular+ ".txt şeklinde kaydedilmiştir.\n")
            break;
        else:
            i = i + 1

#------------ Pasif Keşif Fonksiyonları -------------

def wireshark():
    print("echo wireshark başlatılıyor...")
    os.system("wireshark")

def dig():
    while True:
        dig_sorgu = input(str("Dig sorgunuzu giriniz, önceki adıma gitmek için 'g' basınız (Örneğin dig abc.com): "))
        if dig_sorgu == 'g':
            print("\n")
            time.sleep(0.8)
            break;
        else:
            os.system(dig_sorgu + "| tee report/DIG_"+dig_sorgu+".txt")
            os.system("rm DIG_" + dig_sorgu + ".txt")
            print("dig sorgunuz report dosyasına kaydedilmiştir.\n")

def whoisgenel(hedefwhois):
    os.system("whois "+hedefwhois +"| tee report/WHOIS_"+hedefwhois+".txt")

def whoisparam(yazılım):

    komut = input(("Komutu giriniz (Ornek: whois -b abc.com.tr): "))
    if komut == "whois -h":
        os.system(komut)
    else:
        os.system(komut)
        bosluk_silme(yazılım, komut)

def pasif_tool():

    while True:
        print("""Pasif keşif adımında kullanabileceğiniz araçlar ve siteler:\n
    1) Shodan(Site)
    2) Netcraft(Site)
    3) Exploit Database: Google Hacking Database(Site)
    4) SearchCode(Site)
    5) Whois(tool)
    6) Dig(tool)
    7) Wireshark(tool)
    8) Önceki adıma dönmek için 'g' ya da '8' basınız.\n""")

        pasif = input(str("Kullanmak istediğiniz tool/site: "))
        print("\n")

        if pasif == '1':
            print(">>>>>Shodan bir araç değildir, shodan web adresi: https://www.shodan.io/\n")
            time.sleep(0.8)
        elif pasif == '2':
            print(">>>>>Netcraft bir araç değildir, netcraft web adresi: https://www.netcraft.com/tools/\n")
            time.sleep(0.8)
        elif pasif == '3':
            print(">>>>>Expliot Database bir araç değildir, exploit database web adresi: https://www.exploit-db.com/google-hacking-database\n")
            time.sleep(0.8)
        elif pasif == '4':
            print(">>>>>Searchcode bir araç değildir, searchcode  web adresi: https://searchcode.com\n")
            time.sleep(0.8)
        elif pasif == '5':
            while True:
                whois = input(str("""
    1) Genel Sorgu
    2) Parametreli sorgu
    3) Araçlara geri dönmek için '3' ya da 'g' giriniz: """))
                if whois == '1':
                    hedefwhois = input(str("""Hedef web adresi (Ornek: abc.com.tr):  """))
                    whoisgenel(hedefwhois)
                elif whois == '2':
                    yazılım = "whois"
                    whoisparam(yazılım)
                elif whois == '3' or whois == 'g':
                    time.sleep(0.2)
                    print("\n")
                    break;
                else:
                    print("Geçersiz girdi !!!")
        elif pasif == '6':
            dig()
        elif pasif == '7':
            wireshark()
        elif pasif == 'g' or pasif == '8':
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.8)

# ---------- Aktif Keşif Fonksiyonları --------------
def aktif_tool():
    while True:
        print("""Aktif keşif adımında kullanılabileceğiniz araçlar:\n
    1) Nmap
    2) Nikto
    2) Dirb
    3) Gobuster
    4) Sqlmap
    5) Metasploit-Framework
    6) OWASP ZAP
    7) WPScan
    8) Enum4linux
    9) Smbclient
   10) Wafw00f
   11) Arp-scan
   12) Önceki adıma dönmek için 'g' yada '12' basınız""")
        time.sleep(0.2)

        aktif = input(str("Kullanmak istediğiniz tool: "))
        print("\n")
        #nmap
        if aktif == '1':
            yazılım = "nmap"
            nmap(yazılım)
        #nikto
        elif aktif == '2':
            nikto()
        elif aktif == '3':
            return 0
        elif aktif == '5':
            return 0
        elif aktif == '6':
            return 0
        elif aktif == '7':
            return 0
        elif aktif == '8':
            return 0
        elif aktif == '9':
            return 0
        elif aktif == '10':
            return 0
        elif aktif == '11':
            return 0
        elif aktif == '12' or aktif == 'g':
            time.sleep(0.3)
            break;
        else:
            return 0


def nmap(yazılım):
    while True:
        print("""Seçenekler: 
        1) Standart Tarama
        2) Agresif Tarama Tarama 
        3) İşletim Sistemi Taraması
        4) Özel Tarama
        5) Önceki adım\n""")
        secenek = input(str("Seçmek istediğiniz tarama türü (Önceki adıma dönmek için 'g' ya da '5' basınız.): "))

        if secenek == '1':
            hedefip = input(str("Hedef ip'yi giriniz: "))
            os.system("sudo nmap "+hedefip +"| tee report/NMAP_"+hedefip+".txt")
            print("\n")
            print(">>>>>Tarama sonucu report dosyasına NMAP_"+hedefip+".txt şeklinde kaydedilmiştir.")
            time.sleep(0.8)
        elif secenek == '2':
            hedefip = input(str("Hedef ip'yi giriniz: "))
            os.system("sudo nmap "+hedefip+ " -A | tee report/NMAP_Agresif_"+hedefip+".txt")
            print("\n")
            print(">>>>>Tarama sonucu report dosyasına NMAP_Agresif_" + hedefip + ".txt şeklinde kaydedilmiştir.")
            time.sleep(0.8)
        elif secenek == '3':
            hedefip = input(str("Hedef ip'yi giriniz: "))
            os.system("sudo nmap "+hedefip+ " -O | tee report/NMAP_OS_"+hedefip+".txt")
            print("\n")
            print(">>>>>Tarama sonucu report dosyasına NMAP_O_"+hedefip+".txt şeklinde kaydedilmiştir.")
            time.sleep(0.8)
        elif secenek == '4':
            nmap_komut = input(str("Çalıştırmak istediğiniz komut (Örneğin: nmap -sT -v -d --reason 192.168.0.0): "))
            if nmap_komut == "nmap -h":
                os.system(nmap_komut)
            else:
                os.system("sudo "+nmap_komut)
                komut = nmap_komut
                bosluk_silme(yazılım,komut)
                time.sleep(0.8)
        elif secenek == '5' or secenek == 'g':
            time.sleep(0.8)
            break;

def nikto():
    while True:
        print("""
        1) Standart Tarama
        2) Özel Tarama 
        3) Önceki adım\n""")
        niktosec = input(str("Seçmek istediğiniz tarama türü (Önceki adıma dönmek için 'g' ya da '3' bazınız): "))
        print("\n")
        if niktosec == '1':
            niktohedefip = input(str("Hedef ip'yi giriniz: "))
            os.system("sudo nikto -h " + niktohedefip + "| tee report/NIKTO_" + niktohedefip + ".txt")
            print("\n")
            print(">>>>>Tarama sonucu report dosyasına NIKTO_" + niktohedefip + ".txt şeklinde kaydedilmiştir.")
            time.sleep(0.8)
        elif niktosec == '2':
            yazılım = "nikto"

            nikto_komut = input(("Komutu giriniz :"))
            if nikto_komut == "nikto -h":
                os.system(nikto_komut)
                print("\n")
            else:
                os.system("sudo "+nikto_komut)
                print("\n")
                bosluk_silme(yazılım, nikto_komut)

        elif niktosec == '3' or niktosec == 'g':
            time.sleep(0.5)
            print("\n")
            break;
        else:
            print(">>>>> Geçersiz girdi!!!")


while True:
    secim = input(Fore.YELLOW+"""Reconnaissance(Keşif) adımını seçtiniz.
    
    1) Pasif Keşif
    2) Aktif Keşif
    3) Önceki adıma dönmek için 'g ya da 3' basınız.
    
Keşif türünü seçiniz:""")
    print("\n")
    time.sleep(0.2)
    if (secim == '1'):

        time.sleep(0.2)
        pasif_tool()


    elif (secim == '2'):
        aktif_tool()

    elif (secim == 'g' or secim == '3'):
        time.sleep(0.2)
        break;
    else:
        print(">>>>>Geçersiz girdi!!!")
        print("\n")
        time.sleep(0.8)




